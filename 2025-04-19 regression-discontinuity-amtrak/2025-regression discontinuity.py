# -*- coding: utf-8 -*-
"""Untitled22.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1phwgvd2s-KosHUJR-mKyApmBLHYWuvBx
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.nonparametric.smoothers_lowess import lowess
import statsmodels.formula.api as smf
from pandas_datareader import data as web

# Load data from FRED
start_date = "2017-09-01"
end_date = "2022-12-31"
unrate = web.DataReader("UNRATE", "fred", start=start_date, end=end_date)
civpart = web.DataReader("CIVPART", "fred", start=start_date, end=end_date)
cpi = web.DataReader("CPIAUCSL", "fred", start="2016-09-01", end=end_date)

# Compute year-over-year inflation
cpi['Inflation'] = cpi['CPIAUCSL'].pct_change(12) * 100
cpi = cpi[['Inflation']]

# Merge and clean data
data = unrate.join(civpart).join(cpi)
data.columns = ['UNRATE', 'CIVPART', 'Inflation']
data = data.dropna().reset_index()

# Create running variable and treatment indicators
cutoff_date = pd.to_datetime("2020-03-01")
data['Months'] = (data['DATE'].dt.to_period('M').astype(int) - cutoff_date.to_period('M').ordinal)
data = data[(data['Months'] >= -30) & (data['Months'] <= 30)].copy()
data['Treatment'] = (data['Months'] >= 0).astype(int)
data['Centered_Months'] = data['Months']

# Bandwidth sensitivity models
bw6 = data[(data['Months'] >= -6) & (data['Months'] <= 6)]
bw12 = data[(data['Months'] >= -12) & (data['Months'] <= 12)]
model_bw6 = smf.ols('UNRATE ~ Centered_Months * Treatment', data=bw6).fit()
model_bw12 = smf.ols('UNRATE ~ Centered_Months * Treatment', data=bw12).fit()

# Placebo test (Jan 2019)
placebo_cutoff = pd.to_datetime("2019-01-01")
data['Placebo_Months'] = (data['DATE'].dt.to_period('M').astype(int) - placebo_cutoff.to_period('M').ordinal)
data['Placebo_Treatment'] = (data['Placebo_Months'] >= 0).astype(int)
data['Centered_Placebo'] = data['Placebo_Months']
placebo_model = smf.ols('UNRATE ~ Centered_Placebo * Placebo_Treatment', data=data).fit()

# Covariate continuity models
inf_model = smf.ols('Inflation ~ Centered_Months * Treatment', data=data).fit()
lab_model = smf.ols('CIVPART ~ Centered_Months * Treatment', data=data).fit()

# Summary output
summary_table = pd.DataFrame({
    'Model': ['Bandwidth ±6', 'Bandwidth ±12', 'Placebo Jan 2019', 'Inflation Check', 'Labor Participation Check'],
    'Treatment Effect': [
        model_bw6.params['Treatment'],
        model_bw12.params['Treatment'],
        placebo_model.params['Placebo_Treatment'],
        inf_model.params['Treatment'],
        lab_model.params['Treatment']
    ],
    'p-value': [
        model_bw6.pvalues['Treatment'],
        model_bw12.pvalues['Treatment'],
        placebo_model.pvalues['Placebo_Treatment'],
        inf_model.pvalues['Treatment'],
        lab_model.pvalues['Treatment']
    ]
})

# Minimalist RD plot function
def minimalist_rd_plot(x, y, title, ylabel, filename, ylim_zero=False):
    lowess_fit = lowess(y, x, frac=0.3)
    lowess_x = lowess_fit[:, 0]
    lowess_y = lowess_fit[:, 1]
    interp_y = np.interp(x, lowess_x, lowess_y)
    residuals = y - interp_y
    rolling_std = pd.Series(residuals).rolling(window=3, center=True).std()
    interp_std = np.interp(lowess_x, x, rolling_std)
    upper = lowess_y + 1.96 * interp_std
    lower = lowess_y - 1.96 * interp_std

    fig, ax = plt.subplots(figsize=(10, 6))
    ax.scatter(x, y, color='black', s=12, alpha=0.5)
    ax.plot(lowess_x, lowess_y, color='black', linewidth=1.5)
    ax.fill_between(lowess_x, lower, upper, color='black', alpha=0.1)
    ax.axvline(0, color='black', linestyle='--', linewidth=1)
    ax.set_xlabel('Months from March 2020', fontsize=12)
    ax.set_ylabel(ylabel, fontsize=12)
    ax.set_title(title, fontsize=14)
    if ylim_zero:
        ax.set_ylim(bottom=0)
    ax.spines['right'].set_visible(False)
    ax.spines['top'].set_visible(False)
    ax.spines['left'].set_position(('outward', 5))
    ax.spines['bottom'].set_position(('outward', 5))
    ax.tick_params(direction='out', length=3, width=1)
    plt.xticks(fontsize=11)
    plt.yticks(fontsize=11)
    plt.tight_layout()
    plt.savefig(filename)
    plt.show()

# Generate RD plots
minimalist_rd_plot(data['Months'], data['UNRATE'],
                   'Unemployment Rate Around March 2020',
                   'Unemployment Rate (%)',
                   'rd_plot_unrate_minimalist.png',
                   ylim_zero=True)

minimalist_rd_plot(data['Months'], data['Inflation'],
                   'Inflation Rate Around March 2020',
                   'Inflation Rate (YoY, %)',
                   'rd_plot_inflation_minimalist.png')

minimalist_rd_plot(data['Months'], data['CIVPART'],
                   'Labor Force Participation Around March 2020',
                   'Labor Force Participation Rate (%)',
                   'rd_plot_civpart_minimalist.png')

summary_table